$tablet-width: 768px;
$desktop-width: 1024px;

@mixin iconize($color, $circle, $shadow) {
  color: $color;
  background-color: $circle;
  @include longshadow($shadow);
}

@mixin phone {
  @media (max-width: #{$tablet-width - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$desktop-width}) {
    @content;
  }
}

@mixin keyframes($name) {
  // @-webkit-keyframes #{$name} {
  //   @content;
  // }
  // @-moz-keyframes #{$name} {
  //   @content;
  // }
  // @-o-keyframes #{$name} {
  //   @content;
  // }
  @keyframes #{$name} {
    @content;
  }
}

@mixin relative-font-size($ratio) {
  font-size: $base-font-size * $ratio;
}

@mixin code {
  font-family: "Ubuntu Mono", monospace;
}

@mixin basic {
  font-family: $base-font-family;
}

@mixin title {
  font-family: "Open Sans Condensed", sans-serif;
}

@mixin box-sizing($box-model) {
  // -webkit-box-sizing: $box-model;
  // -moz-box-sizing: $box-model;
  box-sizing: $box-model;
}

@mixin box-shadow($shadow...) {
  // -webkit-box-shadow: $shadow;
  // -moz-box-shadow: $shadow;
  box-shadow: $shadow;
}

@mixin border-radius($rad) {
  // -webkit-border-radius: $rad;
  // -moz-border-radius: $rad;
  border-radius: $rad;
}

@mixin transition($transition...) {
    // -moz-transition: $transition;
    // -o-transition: $transition;
    // -webkit-transition: $transition;
    transition: $transition;
}

@mixin transform($transforms) {
	// -moz-transform: $transforms;
	// -o-transform: $transforms;
	// -ms-transform: $transforms;
	// -webkit-transform: $transforms;
  transform: $transforms;
}

@mixin animation($anim...) {
  // -webkit-animation: $anim; /* Safari 4+ */
  // -moz-animation: $anim; /* Fx 5+ */
  // -o-animation: $anim; /* Opera 12+ */
  animation: $anim; /* IE 10+, Fx 29+ */
}

// from https://codepen.io/markmurray/pen/yyNZpz
@function makelongshadow($color) {
  $val: 0px 0px $color;
  @for $i from 1 through $shadowlength {
    $val: #{$val}, #{$i}px #{$i}px #{$color};
  }
  @return $val;
}

@mixin longshadow($color) {
  text-shadow: makelongshadow($color);
}

// old not used for the moment
// @mixin hexRGBA($color, $opacity: 0.3) {
//     background: $color; // fallback if rgba one params doesn't work
//     background: rgba($color, $opacity);
// }

// mixin from https://gist.github.com/paulmelnikow/7fcfbe4f68e5df7fe326
@mixin gbox_shadow ($level) {
    @if $level == 1 {
        box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
    } @else if $level == 2 {
        box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
    } @else if $level == 3 {
        box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
    } @else if $level == 4 {
        box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
    } @else if $level == 5 {
        box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);
    }
}
